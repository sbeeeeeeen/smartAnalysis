package kr.or.ddit.post.web;



import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import kr.or.ddit.post.model.PostVo;
import kr.or.ddit.post.service.PostServiceInf;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@RequestMapping(value="/post")
@Controller(value="postController")
public class PostController {
	
	private Logger logger = LoggerFactory.getLogger(PostController.class);
	
	@Resource(name="postService")
	private PostServiceInf postService;
	
	@RequestMapping(value="/list")
	public String postList(
							@RequestParam(value="page",defaultValue="1")int page
							,@RequestParam(value="pageSize",defaultValue="10")int pageSize
							,@RequestParam(value="board_num")int board_num		//게시판 구분 어케하냐?ㅊ
							,Model model
						){	
		Map<String, Integer> paramMap = new HashMap<String, Integer>();
		paramMap.put("page", page);
		paramMap.put("pageSize", pageSize);
		paramMap.put("board_num", board_num);
		
		Map<String, Object> resultMap = postService.postPageList(paramMap);
		List<PostVo> postList = (List<PostVo>) resultMap.get("pageList");
		model.addAttribute("postList",postList);
		
		model.addAllAttributes(resultMap);
		
		return "noticeBoard";
	}
	
	@RequestMapping(value="/change")
	@ResponseBody
	public Map<String, Object> changePostList(
										@RequestParam(value="changeSize")int changeSize
										,@RequestParam(value="board_num")int board_num
									){
		Map<String, Integer> paramMap = new HashMap<String, Integer>();
		paramMap.put("page", 1);
		paramMap.put("pageSize", changeSize);
		paramMap.put("board_num", board_num);
		Map<String, Object> resultMap = postService.postPageList(paramMap);
		
		
		return resultMap;
	}
	
	@RequestMapping(value="/searchPost")
	@ResponseBody
	public List<PostVo> searchPost(
									@RequestParam(value="search")String post_title
									,@RequestParam(value="board_num")int board_num
									,PostVo postVo
			) throws UnsupportedEncodingException{
		post_title = URLDecoder.decode(post_title, "UTF-8");
		
		postVo.setPost_title(post_title);
		postVo.setBoard_num(board_num);
		List<PostVo> searchPost = postService.searchPost(postVo);
		
		return searchPost;
	}
	
	@RequestMapping(value="/detail")
	public String detailPost(
								@RequestParam(value="id")int post_num
								,Model model
							){
		PostVo postVo = postService.numPost(post_num);
		model.addAttribute("postVo", postVo);
		
		return "detailPost";
	}
	
	@RequestMapping(value="/opinion")
	public String opinionPost(){
		return "board/opinionPost";
	}
	
	@RequestMapping(value="/opinionSubmit")
	@ResponseBody
	public void opinionSubmit(
								@RequestParam(value="opinioncontent")String post_content
								,@RequestParam(value="opinionTitle")String post_title
							) throws UnsupportedEncodingException{
		post_content = URLDecoder.decode(post_content, "UTF-8");
		post_title = URLDecoder.decode(post_title, "UTF-8");
		
		PostVo postVo = new PostVo();
		postVo.setMem_id("cony");
		postVo.setPost_content(post_content);
		postVo.setPost_title(post_title);
		
		postService.insertOpinion(postVo);
	}
}
