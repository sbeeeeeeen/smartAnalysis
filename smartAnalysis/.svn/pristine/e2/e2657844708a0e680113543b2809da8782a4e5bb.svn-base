package kr.or.ddit.analysis_res.web;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import kr.or.ddit.analysis_res.service.AnalysisResServiceInf;
import kr.or.ddit.industry.service.IndustryServiceInf;
import kr.or.ddit.member.model.MemberVo;
import kr.or.ddit.rating.service.RatingServiceInf;

import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@RequestMapping("/analysisRes")
@Controller
public class AnalysisResController {
	
	@Resource(name="industryService")
	private IndustryServiceInf industryService;
	
	@Resource(name="analysisResService")
	private AnalysisResServiceInf analysisService;
	
	@Resource(name="ratingService")
	private RatingServiceInf ratingService;
	
	//상권분석 보고서
	@RequestMapping("result")
	public String taResult(@RequestParam("addr")String addr,
						   @RequestParam("uj")List<String> ujList, 
						   @RequestParam(defaultValue="0",value="radius") int radius,
						   @RequestParam("latlngJson") String latlng,
						   Model model){
		model.addAllAttributes(results(1));
		
		model.addAttribute("addr", addr);
		model.addAttribute("industryStr", "");
		
		JSONObject obj = new JSONObject(latlng);
		System.out.println("test = ");
		JSONArray test = obj.getJSONArray("latlng");
		System.out.println(test.getJSONObject(0).getDouble("lng")); //lat
		model.addAllAttributes(results(1));
		//DB에 저장하는거 아직 안함...
		return "taResult";
	}
	
	//상권분석할때 가져갈거 모음집
	public Map<String, Object> results(int an_num){
		Map<String, Object> resultMap = ratingService.getRatingLists(an_num);
		resultMap.putAll(analysisService.getAnalysisVos(an_num));
		/*resultMap.put("ratingList", ratingService.getRatingLists(an_num));*/
		return resultMap;
	}
	
	
	
	//분석이력
	@RequestMapping("/tradeAnalysisRes")
	public String analysisResMain(HttpSession session
								, @RequestParam(value = "page", defaultValue = "1") int page
								, @RequestParam(value = "pageSize", defaultValue = "10") int pageSize
								, @RequestParam(value = "an_div", defaultValue = "0") int div
								, Model model){
		MemberVo mem = (MemberVo)session.getAttribute("memberVo");
		Map<String, Object> data = new HashMap<String, Object>();
		data.put("page", page);
		data.put("pageSize", pageSize);
		data.put("an_div", div);
		data.put("mem_id", mem.getMem_id());
		model.addAllAttributes(analysisService.getAnalysisResList(data));
		return "tradeAnalysisRes";
	}
	
	//분석이력 페이지네이션으로 바뀔때 가져갈거 ㅠ
	@RequestMapping("/tradeAnalysisResSelectList")
	public ModelAndView tradeAnalysisResSelectList(HttpSession session
												 , @RequestParam(value = "pageSize") int pageSize
												 , @RequestParam("div") int div){
		ModelAndView mav = new ModelAndView("jsonView");
		String mem_id = ((MemberVo)session.getAttribute("memberVo")).getMem_id();
		Map<String, Object> data = new HashMap<String, Object>();
		data.put("page", 1);
		data.put("pageSize", pageSize);
		data.put("an_div", div);
		data.put("mem_id", mem_id);
		mav.addAllObjects(analysisService.getAnalysisResList(data));
		return mav;
	}
}
